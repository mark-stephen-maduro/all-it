// Retrieve color Sass maps

@function section-color($key: "primary") {
  @return map-get($section-colors, $key);
}

// Lines colors

@function shapes-primary-color($key: "step-1-gradient-bg") {
  @return map-get($shapes-primary-colors, $key);
}

@function shapes-default-color($key: "step-1-gradient-bg") {
  @return map-get($shapes-default-colors, $key);
}

@function lines-light-color($key: "step-1-gradient-bg") {
  @return map-get($shapes-light-colors, $key);
}

@function shapes-dark-color($key: "step-1-gradient-bg") {
  @return map-get($shapes-dark-colors, $key);
}

/*
* SASS preserves units in arithmetic operations. For example:
* 12em * 0 = 0em. This function return the unit of a numeric value.
*
* For more examples, see: https://codepen.io/paulgv/pen/XWrqMgQ
*/
@function extract-unit($number) {
  @return $number * 0 + 1;
}

@function strip-unit($number) {
  @if type-of($number) == "number" and not unitless($number) {
    @return $number / extract-unit($number);
  }

  @return $number;
}

@function single-unit-rem($value, $font-size-base) {
  @if (extract-unit($value) != 1px) {
    @return $value;
  }

  $converted: $value / $font-size-base;

  @return strip-unit($converted) * 1rem;
}

@function multiple-units-rem($values, $font-size-base) {
  $rem-values: ();

  @each $value in $values {
    $rem-values: append($rem-values, single-unit-rem($value, $font-size-base));
  }

  @return $rem-values;
}

@function px-to-rem($px, $font-size-base: 16px) {
  @if type-of($px) == "number" {
    @return single-unit-rem($px, $font-size-base);
  } @else if type-of($px) == "list" {
    @return multiple-units-rem($px, $font-size-base);
  } @else {
    @return $px;
  }
}

@function if-important($important) {
  @return #{if($important, "!important", "")};
}

$util-font-sizes: 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40,
  42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80;

@each $util-font-size in $util-font-sizes {
  .font-size-#{$util-font-size} {
    font-size: px-to-rem($util-font-size + px) !important;
  }
}

.hover-pointer:hover {
  cursor: pointer;
}

.pulse {
  animation: pulse-animation 2s infinite;
}

@keyframes pulse-animation {
  0% {
    box-shadow: 0 0 0 0px rgba(255, 255, 255, 0.2);
  }
  100% {
    box-shadow: 0 0 0 20px rgba(255, 255, 255, 0);
  }
}
